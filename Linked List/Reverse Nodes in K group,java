/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode dummy=new ListNode(-1);
        dummy.next=head;
        int count=0;
        ListNode start=dummy;
        while(head!=null){
            count++;
            if(count%k==0){
                start=reverse(start, head.next);
                head=start.next;
            } else{
                head=head.next;
            }
        }
        return dummy.next;
    }
    ListNode reverse(ListNode start, ListNode end){
        ListNode prev=start, next=null, cur=start.next;
        ListNode ans=cur;
        while(cur!=end){
            next=cur.next;
            cur.next=prev;
            prev=cur;
            cur=next;
        }
        start.next=prev;
        ans.next=cur;
        return ans;
    }
}
